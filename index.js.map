{"version":3,"file":"index.js","sources":["../src/js/tabs.js","../src/js/massage.js","../src/js/cloneOneColection.js","../src/js/cloneCollections.js","../src/js/environment.js"],"sourcesContent":["document.querySelectorAll('.tab-btn').forEach(button => {\n  button.addEventListener('click', () => {\n    document\n      .querySelectorAll('.tab-btn')\n      .forEach(btn => btn.classList.remove('active'));\n    document\n      .querySelectorAll('.tab-content')\n      .forEach(tab => tab.classList.remove('active'));\n\n    button.classList.add('active');\n    const tabId = button.getAttribute('data-tab');\n    document.getElementById(tabId).classList.add('active');\n  });\n});\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nexport function showMessageWarning(message) {\n  iziToast.warning({\n    message: message,\n    titleColor: '#fff',\n    titleSize: '16px',\n    titleLineHeight: '1.5',\n    messageColor: '#fff',\n    messageSize: '16px',\n    messageLineHeight: '1.5',\n    backgroundColor: '#ef4040',\n    position: 'topCenter',\n    timeout: 5000,\n  });\n}\n\nexport function showMessageSuccess(message) {\n  iziToast.success({\n    message: message,\n    titleColor: '#fff',\n    titleSize: '16px',\n    titleLineHeight: '1.5',\n    messageColor: '#fff',\n    messageSize: '16px',\n    messageLineHeight: '1.5',\n    backgroundColor: 'green',\n    position: 'topCenter',\n    timeout: 5000,\n  });\n}\n\nexport function showMessageInfo(message) {\n  iziToast.info({\n    message: message,\n    titleColor: '#fff',\n    titleSize: '16px',\n    titleLineHeight: '1.5',\n    messageColor: '#000',\n    messageSize: '16px',\n    messageLineHeight: '1.5',\n    backgroundColor: 'yellow',\n    position: 'topCenter',\n    timeout: 5000,\n  });\n}\n","import axios from 'axios';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport { showMessageSuccess } from './massage';\nimport { showMessageWarning } from './massage';\n\n// const axios = require('axios');\n\nconst oneCollectionsForm = document.getElementById('collection-clone');\n\noneCollectionsForm.addEventListener('submit', async event => {\n  event.preventDefault();\n  // Считываем данные с формы\n  const apiKeyFrom = document.getElementById('apiKeyFromCol').value.trim();\n  const apiKeyTo = document.getElementById('apiKeyToCol').value.trim();\n  const collectionUid = document.getElementById('colIdFromCol').value.trim();\n  const targetWorkspaceId = document.getElementById('wpIdToCol').value.trim();\n\n  await cloneSingleCollection(\n    apiKeyFrom,\n    apiKeyTo,\n    collectionUid,\n    targetWorkspaceId\n  );\n\n  oneCollectionsForm.reset();\n});\n\n// API ключи  аккаунтов\n//  apiKeyAccount1  источник\n//  apiKeyAccount2  цель\n\n//  workspace ID  рабочего пространства\n// targetWorkspaceId\n\n// UID коллекции\n// collectionUid\n\nasync function cloneSingleCollection(\n  apiKeyAccount1,\n  apiKeyAccount2,\n  collectionUid,\n  targetWorkspaceId\n) {\n  const headersAccount1 = { 'X-Api-Key': apiKeyAccount1 };\n  const headersAccount2 = { 'X-Api-Key': apiKeyAccount2 };\n\n  try {\n    // Получаем коллекцию по UID\n    const cloneUrl = `https://api.getpostman.com/collections/${collectionUid}`;\n    const cloneResponse = await axios.get(cloneUrl, {\n      headers: headersAccount1,\n    });\n    const cloneData = cloneResponse.data.collection;\n\n    // Удаляем поля ID, чтобы создать как новую коллекцию\n    if (cloneData.info && cloneData.info._postman_id) {\n      delete cloneData.info._postman_id;\n    }\n    if (cloneData.info && cloneData.info.uid) {\n      delete cloneData.info.uid;\n    }\n\n    // Отправляем коллекцию в целевое рабочее пространство\n    const createUrl = `https://api.getpostman.com/collections?workspace=${targetWorkspaceId}`;\n    const createData = { collection: cloneData };\n\n    const createResponse = await axios.post(createUrl, createData, {\n      headers: headersAccount2,\n    });\n\n    if (createResponse.status === 200 || createResponse.status === 201) {\n      showMessageSuccess(\n        `The collection \"${cloneData.info.name}\" has been successfully cloned to the target workspace.`\n      );\n    } else {\n      showMessageWarning(\n        `Error creating collection: status ${createResponse.status}`\n      );\n    }\n  } catch (error) {\n    const errData = error.response?.data?.error;\n\n    if (errData && errData.name && errData.message) {\n      showMessageWarning(\n        `Error cloning collection: ${errData.name} - ${errData.message}`\n      );\n    } else if (error.response) {\n      showMessageWarning(\n        `Error cloning collection: ${JSON.stringify(error.response.data)}`\n      );\n    } else {\n      showMessageWarning(`Error cloning collection: ${error.message}`);\n    }\n  }\n}\n","import axios from 'axios';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport { showMessageSuccess } from './massage';\nimport { showMessageWarning } from './massage';\nimport { showMessageInfo } from './massage';\n\nconst allCollections = document.getElementById('all-collections');\n\nallCollections.addEventListener('submit', async event => {\n  event.preventDefault();\n  // Считываем данные с формы\n  const apiKeyFrom = document.getElementById('apiKeyFromAll').value.trim();\n  const apiKeyTo = document.getElementById('apiKeyToAll').value.trim();\n  const sourceWorkspaceId = document.getElementById('wpIdFromAll').value.trim();\n  const targetWorkspaceId = document.getElementById('wpIdToAll').value.trim();\n\n  await cloneCollections(\n    apiKeyFrom,\n    apiKeyTo,\n    sourceWorkspaceId,\n    targetWorkspaceId\n  );\n  allCollections.reset();\n});\n\nasync function getCollections(workspaceId, headers) {\n  const url = `https://api.getpostman.com/collections?workspace=${workspaceId}`;\n  const response = await axios.get(url, { headers });\n  return response.data.collections;\n}\n\n// API ключи  аккаунтов\n//  apiKeyAccount1  источник\n//  apiKeyAccount2  цель\n\n// From\n// sourceWorkspaceId\n\n//  to\n// targetWorkspaceId\n\nasync function cloneCollections(\n  apiKeyAccount1,\n  apiKeyAccount2,\n  sourceWorkspaceId,\n  targetWorkspaceId\n) {\n  const headersAccount1 = { 'X-Api-Key': apiKeyAccount1 };\n  const headersAccount2 = { 'X-Api-Key': apiKeyAccount2 };\n  try {\n    const sourceCollections = await getCollections(\n      sourceWorkspaceId,\n      headersAccount1\n    );\n    const targetCollections = await getCollections(\n      targetWorkspaceId,\n      headersAccount2\n    );\n\n    for (let collection of sourceCollections) {\n      const collectionName = collection.name;\n      const collectionExists = targetCollections.some(\n        target => target.name === collectionName\n      );\n\n      if (!collectionExists) {\n        const cloneUrl = `https://api.getpostman.com/collections/${collection.uid}`;\n        const cloneResponse = await axios.get(cloneUrl, {\n          headers: headersAccount1,\n        });\n        const cloneData = cloneResponse.data.collection;\n\n        // Убираем ID, чтобы создать как новую коллекцию\n        if (cloneData.info && cloneData.info._postman_id) {\n          delete cloneData.info._postman_id;\n        }\n        if (cloneData.info && cloneData.info.uid) {\n          delete cloneData.info.uid;\n        }\n\n        const createUrl = `https://api.getpostman.com/collections?workspace=${targetWorkspaceId}`;\n        const createData = { collection: cloneData };\n\n        const createResponse = await axios.post(createUrl, createData, {\n          headers: headersAccount2,\n        });\n\n        if (createResponse.status === 200 || createResponse.status === 201) {\n          showMessageSuccess(\n            `The collection  \"${collectionName}\" has been successfully cloned to the target workspace.`\n          );\n        } else {\n          showMessageWarning(\n            `Error creating collection: status  \"${collectionName}\": status ${createResponse.status}`\n          );\n        }\n      } else {\n        showMessageInfoWithIncrementalDelay(\n          `The collection \"${collectionName}\" already exists in the target workspace.`\n        );\n      }\n    }\n  } catch (error) {\n    const errData = error.response?.data?.error;\n\n    if (errData && errData.name && errData.message) {\n      showMessageWarning(\n        `Error cloning collection: ${errData.name} - ${errData.message}`\n      );\n    } else if (error.response) {\n      showMessageWarning(\n        `Error cloning collection: ${JSON.stringify(error.response.data)}`\n      );\n    } else {\n      showMessageWarning(`Error cloning collection: ${error.message}`);\n    }\n  }\n}\n\nlet messageCount = 0;\n\nfunction showMessageInfoWithIncrementalDelay(message) {\n  messageCount++;\n  setTimeout(() => {\n    showMessageInfo(message);\n    messageCount--;\n  }, messageCount * 2000);\n}\n","import axios from 'axios';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport { showMessageSuccess } from './massage';\nimport { showMessageWarning } from './massage';\nimport { showMessageInfo } from './massage';\n\nconst environmentСlone = document.getElementById('environment-clone');\n\nenvironmentСlone.addEventListener('submit', async event => {\n  event.preventDefault();\n  // Считываем данные с формы\n  const apiKeyFrom = document.getElementById('apiKeyFromEnv').value.trim();\n  const apiKeyTo = document.getElementById('apiKeyToEnv').value.trim();\n  const sourceWorkspaceId = document.getElementById('wpIdFromEnv').value.trim();\n  const targetWorkspaceId = document.getElementById('wpIdToEnv').value.trim();\n\n  await cloneEnvironments(\n    apiKeyFrom,\n    apiKeyTo,\n    sourceWorkspaceId,\n    targetWorkspaceId\n  );\n\n  environmentСlone.reset();\n});\n\n// Получить список окружений в воркспейсе\nasync function getEnvironments(workspaceId, headers) {\n  const url = `https://api.getpostman.com/environments?workspace=${workspaceId}`;\n  const response = await axios.get(url, { headers });\n  return response.data.environments;\n}\n\nasync function cloneEnvironments(\n  apiKeyAccount1,\n  apiKeyAccount2,\n  sourceWorkspaceId,\n  targetWorkspaceId\n) {\n  const headersAccount1 = { 'X-Api-Key': apiKeyAccount1 };\n  const headersAccount2 = { 'X-Api-Key': apiKeyAccount2 };\n  try {\n    const sourceEnvs = await getEnvironments(\n      sourceWorkspaceId,\n      headersAccount1\n    );\n    const targetEnvs = await getEnvironments(\n      targetWorkspaceId,\n      headersAccount2\n    );\n\n    for (let env of sourceEnvs) {\n      const envName = env.name;\n\n      // Проверяем, существует ли такое окружение в целевом workspace\n      const exists = targetEnvs.some(targetEnv => targetEnv.name === envName);\n      if (exists) {\n        showMessageInfo(\n          `The environment \"${envName}\" already exists in the target workspace.`\n        );\n        continue;\n      }\n\n      // Получаем полные данные окружения\n      const envUrl = `https://api.getpostman.com/environments/${env.uid}`;\n      const envResponse = await axios.get(envUrl, { headers: headersAccount1 });\n      const envData = envResponse.data.environment;\n\n      // Удаляем ID/UID перед созданием\n      delete envData.id;\n      delete envData.uid;\n\n      // Создаём окружение в целевом воркспейсе\n      const createUrl = `https://api.getpostman.com/environments?workspace=${targetWorkspaceId}`;\n      const createData = { environment: envData };\n\n      const createResponse = await axios.post(createUrl, createData, {\n        headers: headersAccount2,\n      });\n\n      if (createResponse.status === 200 || createResponse.status === 201) {\n        showMessageSuccess(\n          `The environment \"${envName}\" has been successfully cloned.`\n        );\n      } else {\n        showMessageWarning(`Error cloning environment \"${envName}`);\n      }\n    }\n  } catch (error) {\n    const errData = error.response?.data?.error;\n\n    if (errData && errData.name && errData.message) {\n      showMessageWarning(\n        `Error cloning environment: ${errData.name} - ${errData.message}`\n      );\n    } else if (error.response) {\n      showMessageWarning(\n        `Error cloning environment: ${JSON.stringify(error.response.data)}`\n      );\n    } else {\n      showMessageWarning(`Error cloning environment: ${error.message}`);\n    }\n  }\n}\n"],"names":["button","btn","tab","tabId","showMessageWarning","message","iziToast","showMessageSuccess","showMessageInfo","oneCollectionsForm","event","apiKeyFrom","apiKeyTo","collectionUid","targetWorkspaceId","cloneSingleCollection","apiKeyAccount1","apiKeyAccount2","headersAccount1","headersAccount2","cloneUrl","cloneData","axios","createUrl","createData","createResponse","error","errData","_b","_a","allCollections","sourceWorkspaceId","cloneCollections","getCollections","workspaceId","headers","url","sourceCollections","targetCollections","collection","collectionName","target","showMessageInfoWithIncrementalDelay","messageCount","environmentСlone","cloneEnvironments","getEnvironments","sourceEnvs","targetEnvs","env","envName","targetEnv","envUrl","envData"],"mappings":"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"}